{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","onClick","handleCount","id","alt","name","src","image","Wrapper","children","Header","highscore","score","App","state","characters","_this","find","d","i","wasClicked","setState","console","log","this","sort","Math","random","gameReset","forEach","character","components_Wrapper","components_Header","map","components_CharacterCard","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"68DAaeA,SAVO,SAAAC,GAAK,OAEvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAC3DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,kBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,kBCQ1BC,SATA,SAAAd,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SAASJ,EAAMa,UAC/BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,cACgBJ,EAAMe,UADtB,WACyCf,EAAMgB,UCmDxCC,6MAnDbC,MAAQ,CACNC,aACAH,MAAO,EACPD,UAAW,KAGbT,YAAc,SAAAC,GACZa,EAAKF,MAAMC,WAAWE,KAAK,SAACC,EAAGC,GAC7B,GAAID,EAAEf,KAAOA,EAAI,CACf,GAAgC,IAA7BY,EAAWI,GAAGC,WAOf,OANAL,EAAWI,GAAGC,WAAaL,EAAWI,GAAGC,WAAa,EACtDJ,EAAKK,SAAS,CAACT,MAAQI,EAAKF,MAAMF,MAAQ,GAAI,WAC5CU,QAAQC,IAAIC,KAAKV,MAAMF,OACvBU,QAAQC,IAAIR,EAAWK,cAEzBJ,EAAKF,MAAMC,WAAWU,KAAK,kBAAMC,KAAKC,SAAW,MAC1C,EAEPX,EAAKY,YAGL,OAAO,OAKfA,UAAY,WAUR,OATEZ,EAAKF,MAAMH,UAAYK,EAAKF,MAAMF,OACpCI,EAAKK,SAAS,CAACV,UAAWK,EAAKF,MAAMF,OAAQ,WAC3CU,QAAQC,IAAIC,KAAKV,MAAMH,aAGzBK,EAAKF,MAAMC,WAAWc,QAAQ,SAAAC,GAC5BA,EAAUV,WAAa,IAEzBJ,EAAKK,SAAS,CAACT,MAAO,KACf,2EAIT,OACEf,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,CAAQpB,MAAOY,KAAKV,MAAMF,MAAOD,UAAWa,KAAKV,MAAMH,WAAvD,qBACCa,KAAKV,MAAMC,WAAWkB,IAAI,SAAAH,GAAS,OAClCjC,EAAAC,EAAAC,cAACmC,EAAD,CACE/B,GAAI2B,EAAU3B,GACdgC,IAAKL,EAAU3B,GACfI,MAAOuB,EAAUvB,kBAhDX6B,IAAMC,iBCDxBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.34eb1e5f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst CharacterCard = props => (\n\n    <div className=\"card\" onClick={() => props.handleCount(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Header = props => (\n    <div className = \"header\">\n        <div className =\"title\">{props.children}</div>\n        <div className=\"scoreboard\">\n            Highscore: {props.highscore} Score: {props.score}\n        </div>\n    </div>\n);\n\nexport default Header;","import React from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  state = {\n    characters,\n    score: 0,\n    highscore: 0\n  };\n  \n  handleCount = id => {\n    this.state.characters.find((d, i) => {\n      if (d.id === id) {\n        if(characters[i].wasClicked === 0) {\n          characters[i].wasClicked = characters[i].wasClicked + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n            console.log(characters.wasClicked);      \n          });\n          this.state.characters.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameReset();\n        }\n      }\n          return true;\n        }\n          );\n        }\n\n  gameReset = () => {\n    if (this.state.highscore < this.state.score) {\n      this.setState({highscore: this.state.score}, function () {\n        console.log(this.state.highscore);\n      })\n    }\n      this.state.characters.forEach(character => {\n        character.wasClicked = 0;\n      });\n      this.setState({score: 0});\n      return true;}\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Memory Click Game</Header>\n        {this.state.characters.map(character => (\n          <CharacterCard\n            id={character.id}\n            key={character.id}\n            image={character.image}/>\n        ))}\n      </Wrapper>);}}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}